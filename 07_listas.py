# -*- coding: utf-8 -*-
"""Python_07_Listas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W65MmFNwVLJFBKXtgFeKNOyvgMK0Uhrp
"""

#TRASNFORMANDO LISTAS
notas_turma = ['João', 8.0, 9.0, 10.0, 'Maria', 9.0, 7.0, 6.0, 'José', 3.4, 7.0, 7.0, 'Cláudia', 5.5, 6.6, 8.0, 'Ana', 6.0, 10.0, 9.5]

#separando o nome das listas

nomes = []
notas_juntas = []

for i in range(len(notas_turma)):
 if i % 4 ==0: #usando multiplos de 4, já que os nomes estão nas posições 4
  nomes.append(notas_turma[i])
else:
  notas_juntas.append(notas_turma[i])

nomes

notas_juntas

#criação da lista de listas

notas = []

#populando a lista

for i in range(0, len(notas_juntas), 3): #3 = pula a iteração de 3 em 3 posições
  notas.append([notas_juntas[i], notas_juntas[i+1], notas_juntas[i+2]])
notas

##ajustar

#TRABALHANDO COM LISTAS DE TUPLAS
from random import randint

estudantes = ["João", "Maria", "José", "Cláudia", "Ana"] #criando a lista de estudantes
estudantes

def gera_codigo():
  return str(randint(0,999)) #função para gerar id, a partir da biblioteca random, e transformando em string

codigo_estudantes = [] #laço para iterar cada estudante e passar para a lista de tupla

for i in range(len(estudantes)):
 codigo_estudantes.append((estudantes[i], estudantes[i][0] + gera_codigo())) #criando a tupla com as posições definidas

print(codigo_estudantes)

#LIST COMPREHENSION
#forma simples de criação de uma lista, seguindo alguns padrões


#Criando uma lista com as médias dos estudantes da lista de listas

notas = [[8.0, 9.0, 10.0], [9.0, 7.0, 6.0], [3.4, 7.0, 7.0], [5.5, 6.6, 8.0], [6.0, 10.0, 9.5]]

#Função para calcular a média de notas passadas por uma lista

def media(lista: list=[0]) -> float:
  calculo = sum(lista) / len(lista)
  return calculo

medias = [round(media(nota),1) for nota in notas] #criando a lista de medias
print(medias)

#LIST COMPREHENSION COM CONDIÇÃO
#selecionando estudantes com uma média final igual ou maior que 8

nomes = [('João', 'J720'), ('Maria', 'M205'), ('José', 'J371'), ('Cláudia', 'C546'), ('Ana', 'A347')]
medias = [9.0, 7.3, 5.8, 6.7, 8.5]

#Gerando a lista de nomes (extraindo da tupla)
nomes = [ nome[0] for nome in nomes] #expressão for item in lista
nomes

estudantes = list(zip(nomes, medias))#função que recebe um ou mais iteráveis e retorna como iterador de tuplas
estudantes

#Gerando a lista de pessoas com média alta
canditados = [estudante[0] for estudante in estudantes if estudante[1] >= 8.0] #exp for item in lista if condição
canditados

#outro uso da função zip
id = [1, 2, 3, 4, 5]
regiao = ["Norte", "Nordeste", "Sudeste", "Centro-Oeste", "Sul"]

mapa = list(zip(id, regiao))
mapa