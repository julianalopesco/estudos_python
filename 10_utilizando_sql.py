# -*- coding: utf-8 -*-
"""python_sql.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MqlmEZU2TTdo4NOEXAKXTZRkDsEWuRag
"""

import matplotlib.pyplot as plt
import pandas as pd
from sqlalchemy import create_engine, inspect, text

#dados utilizados
url_itens_pedidos = 'https://github.com/alura-cursos/SQL-python-integracao/raw/main/TABELAS/itens_pedidos.csv'
url_pedidos = 'https://github.com/alura-cursos/SQL-python-integracao/raw/main/TABELAS/pedidos.csv'
url_produto = 'https://github.com/alura-cursos/SQL-python-integracao/raw/main/TABELAS/produtos.csv'
url_vendedores = 'https://github.com/alura-cursos/SQL-python-integracao/raw/main/TABELAS/vendedores.csv'

#transformando os dados em dataframes
itens_pedidos = pd.read_csv(url_itens_pedidos)
pedidos = pd.read_csv(url_pedidos)
produtos = pd.read_csv(url_produto)
vendedores = pd.read_csv(url_vendedores)

#alocando as tabelas no banco de dados
engine = create_engine('sqlite:///:memory:') #cria um banco de dados local

#adicionando as tabelas no db
produtos.to_sql('produtos',engine,index=False)
itens_pedidos.to_sql('itens_pedidos', engine, index=False)
pedidos.to_sql('pedidos', engine, index=False)
vendedores.to_sql('vendedores', engine, index=False)

#inspecionando as tabelas

inspector = inspect(engine)
print(inspector.get_table_names())

#fazendo as primeiras consultas sql
query = 'SELECT condicao FROM produtos'

#conectando o engine
with engine.connect() as conexao:
  consulta = conexao.execute(text(query)) #converte a query em texto
  dados = consulta.fetchall() #coleta os dados da consulta e armazena
pd.DataFrame(dados,columns=consulta.keys()) #criando o df

#transformando a consulta em uma função
def sql_df(query):
  with engine.connect() as conexao:
    consulta = conexao.execute(text(query))
    dados = consulta.fetchall()
  return pd.DataFrame(dados,columns=consulta.keys())

#selecionando os produtos por condição agrupando por frequência
query = 'SELECT condicao, COUNT(*) AS quantidade FROM produtos GROUP BY condicao;'
df_produtos = sql_df(query)
df_produtos

#criando uma visualização
plt.bar(df_produtos['Condicao'], df_produtos['quantidade'], color='#9353FF')
plt.title('Contagem por tipo de condições dos produtos')
plt.show()

#conhecendo as tabelas

sql_df('SELECT * FROM produtos').head(3)

sql_df('SELECT * FROM itens_pedidos').head(3)

#descobrindo quantos dos produtos foram vendidos e agregando
query =  '''SELECT produtos.produto, sum(itens_pedidos.quantidade) AS Quantidade
FROM itens_pedidos, produtos
WHERE itens_pedidos.produto_id = produtos.produto_id
GROUP BY produtos.produto'''

sql_df(query)

#ordenando as informações
query =  '''SELECT produtos.produto, sum(itens_pedidos.quantidade) AS Quantidade
FROM itens_pedidos, produtos
WHERE itens_pedidos.produto_id = produtos.produto_id
GROUP BY produtos.produto
ORDER BY Quantidade DESC'''

sql_df(query)

query =  '''SELECT produtos.produto, sum(itens_pedidos.quantidade) AS Quantidade
FROM itens_pedidos, produtos
WHERE itens_pedidos.produto_id = produtos.produto_id
GROUP BY produtos.produto
ORDER BY Quantidade ASC'''

df_prod_quant = sql_df(query)
df_prod_quant

#plotando o gráfico
plt.barh(df_prod_quant['produto'][-10:], df_prod_quant['Quantidade'][-10:], color='#9353FF')
plt.xlabel('Quantidade vendida')
plt.show()

#verificando os dados para mais análises
sql_df('SELECT * FROM PEDIDOS').head(3)

#verificando topo de dados
sql_df('SELECT * FROM PEDIDOS').info()

#filtrando a tabela de pedido a partir da data
query = '''SELECT *
FROM PEDIDOS
WHERE strftime('%Y',data_compra) = '2020';
'''
sql_df(query)

#agrupando os dados pelo id do vendedor
query = '''SELECT VENDEDOR_ID, COUNT(*)
FROM PEDIDOS
WHERE strftime('%Y',data_compra) = '2020'
GROUP BY VENDEDOR_ID
'''
#strftime: função para lidar com datas em formato de texto
sql_df(query)

#relacionando tabelas de vendedores e pedidos
query = '''SELECT VENDEDORES.NOME_VENDEDOR, COUNT(PEDIDOS.PEDIDO_ID) AS 'Quantidade vendas'
FROM PEDIDOS, VENDEDORES
WHERE strftime('%Y',data_compra) = '2020' AND VENDEDORES.VENDEDOR_ID = PEDIDOS.VENDEDOR_ID
GROUP BY VENDEDORES.NOME_VENDEDOR
ORDER BY COUNT(PEDIDOS.PEDIDO_ID) DESC;
'''
sql_df(query)

#analisando o valor médio por venda
query = '''SELECT VENDEDORES.NOME_VENDEDOR, AVG(PEDIDOS.TOTAL) AS 'Valor médio por vendas'
FROM PEDIDOS, VENDEDORES
WHERE strftime('%Y',data_compra) = '2020' AND VENDEDORES.VENDEDOR_ID = PEDIDOS.VENDEDOR_ID
GROUP BY VENDEDORES.NOME_VENDEDOR
ORDER BY AVG(PEDIDOS.TOTAL) DESC;
'''
sql_df(query)

#rankeando as vendas por estado
query = '''SELECT ESTADO, COUNT(*) AS Pedidos
FROM ITENS_PEDIDOS
GROUP BY ESTADO
ORDER BY Pedidos DESC;
'''
sql_df(query)

#relacionando as tabelas de itens_pedidos, pedidos e vendedores para encontrar os melhores vendedores de SP
query = '''SELECT PEDIDOS.VENDEDOR_ID, COUNT(*) AS quantidade_vendas
FROM PEDIDOS
JOIN ITENS_PEDIDOS ON ITENS_PEDIDOS.PEDIDO_ID = PEDIDOS.PEDIDO_ID
GROUP BY PEDIDOS.VENDEDOR_ID
ORDER BY quantidade_vendas DESC;
'''
sql_df(query)

#adicionando o filtro
query = '''SELECT PEDIDOS.VENDEDOR_ID, COUNT(*) AS quantidade_vendas
FROM PEDIDOS
JOIN ITENS_PEDIDOS ON ITENS_PEDIDOS.PEDIDO_ID = PEDIDOS.PEDIDO_ID
WHERE ITENS_PEDIDOS.ESTADO = 'BR-SP'
GROUP BY PEDIDOS.VENDEDOR_ID
ORDER BY quantidade_vendas DESC;
'''
sql_df(query)

#exibindo o nome dos vendedores
query = '''SELECT VENDEDORES.NOME_VENDEDOR, COUNT(*) AS quantidade_vendas
FROM PEDIDOS
JOIN VENDEDORES ON VENDEDORES.VENDEDOR_ID = PEDIDOS.VENDEDOR_ID
JOIN ITENS_PEDIDOS ON ITENS_PEDIDOS.PEDIDO_ID = PEDIDOS.PEDIDO_ID
WHERE ITENS_PEDIDOS.ESTADO = 'BR-SP'
GROUP BY VENDEDORES.NOME_VENDEDOR
ORDER BY quantidade_vendas DESC;
'''
sql_df(query)

#vendo as marcas em são paulo por quantidade de pedidos
query = '''SELECT PRODUTOS.MARCA, COUNT(*) AS 'Produtos vendidos'
FROM PRODUTOS
JOIN ITENS_PEDIDOS ON ITENS_PEDIDOS.PRODUTO_ID = PRODUTOS.PRODUTO_ID
WHERE ITENS_PEDIDOS.ESTADO = 'BR-SP'
GROUP BY PRODUTOS.MARCA
ORDER BY COUNT(ITENS_PEDIDOS.PRODUTO_ID) DESC;
'''
df_marcas_sp = sql_df(query)
df_marcas_sp

#produtos mais vendidos em dezembro para o brasil
query = '''SELECT PRODUTOS.PRODUTO, COUNT(*) AS quantidade_vendas
FROM ITENS_PEDIDOS
JOIN produtos ON produtos.produto_id = ITENS_PEDIDOS.produto_id
JOIN PEDIDOS ON PEDIDOS.PEDIDO_ID = ITENS_PEDIDOS.PEDIDO_ID
WHERE strftime('%m',PEDIDOS.data_compra)= '12'
GROUP BY produtos.produto
ORDER BY quantidade_vendas DESC;
'''
sql_df(query)

